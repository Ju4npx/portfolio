---
import { Button } from "@/components";
import { GithubIcon, LinkIcon, ProjectIcon } from "@/icons";
import type { Project } from "@/types";
import { t } from "i18next";

interface Props {
  project: Project;
}

const { project } = Astro.props;
---

<article
  id="project"
  class="radial-gradient flex items-center justify-center shadow-inner shadow-black/75"
>
  <div class="m-auto grid max-w-6xl gap-8 px-4 py-16 md:grid-cols-2">
    <div class="flex items-center justify-center">
      <figure class="glow-shift">
        <img
          alt={t("projects.mockup-alt", { project: project.name })}
          src={`/assets/images/projects/${project.image}`}
          class="aspect-video rounded-xl ring-1 ring-white/25"
          transition:name={`project-image-${project.slug}`}
        />
      </figure>
    </div>
    <div class="flex flex-col justify-center">
      <ul class="flex flex-wrap gap-2">
        {
          project.tags.map((tag) => (
            <li class="rounded-lg bg-dark px-2 text-sm text-white">{tag}</li>
          ))
        }
      </ul>
      <span class="my-4 flex items-center gap-4 text-white">
        <ProjectIcon class="size-7" />
        <h1 class="text-start text-3xl font-bold text-white md:text-4xl">
          {project.name}
        </h1>
      </span>
      <p class="text-white/75">
        {project.description}
      </p>

      <nav class="mt-4">
        <ul class="flex gap-2">
          {
            project.page && (
              <li class="relative flex">
                <Button href={project.page} target="_blank" variant="gradient">
                  <LinkIcon class="size-5 text-white" />
                  {t("projects.view-project")}
                </Button>
              </li>
            )
          }
          {
            project.repository && (
              <li class="flex">
                <Button
                  href={project.repository}
                  target="_blank"
                  title="Github"
                >
                  <GithubIcon class="size-5 text-white" />
                  {t("projects.view-repository")}
                </Button>
              </li>
            )
          }
        </ul>
      </nav>
    </div>
  </div>
</article>

<style>
  #project {
    min-height: calc(100vh - 80px);
  }

  .radial-gradient::before {
    background: radial-gradient(
      50% 50% at 50% 50%,
      var(--color-primary-transparent) 20%,
      transparent 100%
    );
    animation: fadeAndShrink 3s ease-in-out infinite alternate;
  }

  .radial-gradient::after {
    background: radial-gradient(
      50% 50% at 50% 50%,
      var(--color-secondary-transparent) 20%,
      transparent 100%
    );
    animation: fadeAndGrow 3s ease-in-out infinite alternate;
  }
</style>
